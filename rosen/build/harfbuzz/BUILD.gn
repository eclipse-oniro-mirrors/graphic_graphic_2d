# Copyright (c) 2022 Huawei Device Co., Ltd.. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/ace_platforms.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

skia_root = "//third_party/skia"

config("libharfbuzz_compile_flags") {
  cflags_cc = [
    "-std=c++14",
    "-fno-exceptions",
    "-fno-rtti",

    # "-fvisibility-inlines-hidden",
    "-Os",
  ]

  cflags = [
    "-w",
    "-fstrict-aliasing",
    "-Os",
    "-fdata-sections",
    "-ffunction-sections",
    "-gline-tables-only",
    "-funwind-tables",
    "-Wno-unused-parameter",

    # "-fvisibility=hidden",
  ]

  include_dirs = [
    "$skia_root/third_party/harfbuzz",
    "$skia_root/third_party/externals/harfbuzz/src",
  ]
}

template("rosen_libharfbuzz") {
  forward_variables_from(invoker, "*")

  ohos_source_set(target_name) {
    defines += invoker.defines
    defines += [
      "HAVE_ICU",
      "HAVE_ICU_BUILTIN",
      "HAVE_INTEL_ATOMIC_PRIMITIVES",
      "HAVE_OT",
      "U_USING_ICU_NAMESPACE=0",
      "SK_USING_THIRD_PARTY_ICU",
      "UPRV_BLOCK_MACRO_BEGIN=",
      "UPRV_BLOCK_MACRO_END=",
    ]
    cflags_cc += invoker.cflags_cc

    configs = [ ":libharfbuzz_compile_flags" ]
    if (platform == "android") {
      configs += [ "$ace_root/build:reduce_eh_frame_config" ]
    }

    sources = [
      "$skia_root/third_party/externals/harfbuzz/src/hb-aat-layout.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-aat-map.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-blob.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-buffer-serialize.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-buffer.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-common.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-face.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-font.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-icu.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-map.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-cff1-table.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-cff2-table.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-color.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-face.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-font.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-layout.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-map.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-math.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-name.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-arabic.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-default.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-hangul.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-hebrew.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-indic-table.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-indic.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-khmer.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-myanmar.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-thai.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-use-table.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-use.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-vowel-constraints.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-fallback.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-normalize.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-tag.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ot-var.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-set.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-shape-plan.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-shape.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-shaper.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-static.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-subset-cff-common.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-subset-cff1.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-subset-cff2.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-subset-input.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-subset-plan.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-subset.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-ucd.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-unicode.cc",
      "$skia_root/third_party/externals/harfbuzz/src/hb-warning.cc",
    ]
    if (defined(use_new_skia) && use_new_skia) {
      sources -= [
        "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-use-table.cc",
        "$skia_root/third_party/externals/harfbuzz/src/hb-warning.cc",
      ]
      sources += [
        "$skia_root/third_party/externals/harfbuzz/src/hb-fallback-shape.cc",
        "$skia_root/third_party/externals/harfbuzz/src/hb-number.cc",
        "$skia_root/third_party/externals/harfbuzz/src/hb-ot-metrics.cc",
        "$skia_root/third_party/externals/harfbuzz/src/hb-ot-shape-complex-syllabic.cc",
      ]
    }

    deps = [ "$graphic_2d_root/rosen/build/icu:rosen_libicu_$platform" ]

    part_name = "graphic_2d"
    subsystem_name = "graphic"
  }
}

foreach(item, ace_platforms) {
  rosen_libharfbuzz("rosen_libharfbuzz_" + item.name) {
    platform = item.name
    defines = []
    cflags_cc = []
    config = {
    }

    if (defined(item.config)) {
      config = item.config
    }

    if (defined(config.defines)) {
      defines = config.defines
    }

    if (defined(config.cflags_cc)) {
      cflags_cc = config.cflags_cc
    }
  }
}
