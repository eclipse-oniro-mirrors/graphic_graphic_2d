# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")
import("//foundation/graphic/graphic_2d/rosen/modules/effect/effect_config.gni")

## Build libcolor_picker.so

config("graphic_napi_color_picker_config") {
  visibility = [ ":*" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Wno-pointer-arith",
    "-Wno-non-virtual-dtor",
    "-Wno-missing-field-initializers",
    "-Wno-c++11-narrowing",
  ]

  cflags_cc = [ "-std=c++17" ]

  defines = [ "EGL_EGLEXT_PROTOTYPES" ]

  include_dirs = [
    "include",
    "$graphic_2d_root/interfaces/kits/napi/graphic/effect/include",
    "$graphic_2d_root/utils/color_manager/export",
    "$graphic_2d_root/utils/log",
  ]
}

config("graphic_napi_color_picker_public_config") {
  include_dirs = [ "include" ]
}

if (is_arkui_x) {
  ohos_source_set("color_picker") {
    configs = [ ":graphic_napi_color_picker_config" ]

    include_dirs = [
      "//foundation/multimedia/image_framework/interfaces/innerkits/include",
    ]

    sources = [
      "src/color_extract.cpp",
      "src/color_picker.cpp",
    ]

    deps = [
      "$graphic_2d_root/utils/color_manager:color_manager",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog_${target_os}",
      "//foundation/arkui/ace_engine/adapter/${target_os}/build:libarkui_${target_os}",
    ]

    public_external_deps = [ "c_utils:utilsbase" ]

    part_name = "graphic_2d"
    subsystem_name = "graphic"
  }
} else {
  ohos_shared_library("color_picker") {
    configs = [ ":graphic_napi_color_picker_config" ]
    public_configs = [ ":graphic_napi_color_picker_public_config" ]
    sources = [
      "src/color_extract.cpp",
      "src/color_picker.cpp",
    ]
    deps = [ "$graphic_2d_root/utils/color_manager:color_manager" ]
    external_deps = [
      "c_utils:utils",
      "graphic_surface:surface_headers",
      "hilog:libhilog",
      "image_framework:image_native",
      "ipc:ipc_single",
    ]

    part_name = "graphic_2d"
    subsystem_name = "graphic"
  }
}
## Build color_picker.so
