# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/frameworks/text/config.gni")
import(
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client/render_service_client.gni")

module_output_path = "graphic_2d/graphic_2d/rosen/modules/render_service_client"

ohos_unittest("RSAnimationTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }
  sources = [
    "rs_animation_base_test.cpp",
    "rs_animation_callback_test.cpp",
    "rs_animation_group_test.cpp",
    "rs_animation_supplement_test.cpp",
    "rs_animation_test.cpp",
  ]

  configs = [ ":rs_animation_test_config" ]

  deps =
      [ "$rosen_root/modules/render_service_client:librender_service_client" ]

  public_deps =
      [ "$rosen_root/modules/render_service_client:render_service_client_src" ]

  external_deps = [
    "eventhandler:libeventhandler",
    "googletest:gtest_main",
    "hilog:libhilog",
    "window_manager:libwm",
  ]

  subsystem_name = "graphic"
}

ohos_unittest("RSAnimationTest1") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }
  sources = [
    "rs_animation_base_test.cpp",
    "rs_animation_timing_curve_test.cpp",
    "rs_curve_animation_test.cpp",
    "rs_implicit_animator_test.cpp",
    "rs_interactive_implict_animator_test.cpp",
    "rs_keyframe_animation_test.cpp",
  ]

  configs = [ ":rs_animation_test_config" ]

  deps = [
    "$rosen_root/modules/2d_graphics:2d_graphics",
    "$rosen_root/modules/render_service_client:librender_service_client",
  ]

  public_deps =
      [ "$rosen_root/modules/render_service_client:render_service_client_src" ]

  external_deps = [
    "eventhandler:libeventhandler",
    "googletest:gtest_main",
    "hilog:libhilog",
    "window_manager:libwm",
  ]

  subsystem_name = "graphic"
}

ohos_unittest("RSAnimationTest2") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }
  sources = [
    "rs_animation_base_test.cpp",
    "rs_motion_path_option_test.cpp",
    "rs_node_animate_supplement_test.cpp",
    "rs_path_animation_test.cpp",
    "rs_showing_properties_freezer_test.cpp",
  ]

  configs = [ ":rs_animation_test_config" ]

  deps =
      [ "$rosen_root/modules/render_service_client:librender_service_client" ]

  public_deps =
      [ "$rosen_root/modules/render_service_client:render_service_client_src" ]

  external_deps = [
    "eventhandler:libeventhandler",
    "googletest:gtest_main",
    "hilog:libhilog",
    "window_manager:libwm",
  ]

  subsystem_name = "graphic"
}

ohos_unittest("RSAnimationTest3") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }
  sources = [
    "rs_animation_base_test.cpp",
    "rs_spring_animation_test.cpp",
    "rs_symbol_animation_test.cpp",
    "rs_transition_effect_test.cpp",
    "rs_time_protocol_test.cpp",
  ]

  configs = [ ":rs_animation_test_config" ]

  deps = [
    "$rosen_root/modules/render_service_client:librender_service_client",
    "$rosen_text_root:rosen_text",
  ]

  public_deps =
      [ "$rosen_root/modules/render_service_client:render_service_client_src" ]

  external_deps = [
    "eventhandler:libeventhandler",
    "googletest:gtest_main",
    "hilog:libhilog",
    "window_manager:libwm",
  ]

  subsystem_name = "graphic"
}

config("rs_animation_test_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client",
    "//foundation/window/window_manager/interfaces/innerkits",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base",
    "$rosen_root/modules/render_service_client/core/animation/",
  ]
  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]
}

group("unittest") {
  testonly = true
  deps = [
    ":RSAnimationTest",
    ":RSAnimationTest1",
    ":RSAnimationTest2",
    ":RSAnimationTest3",
  ]
}
