# Copyright (c) 2022 Huawei Device Co., Ltd.. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")
import("$graphic_2d_root/rosen/modules/2d_engine/rosen_text/config.gni")

if (!enable_text_gine) {
  config("rosen_text_ui_config") {
    include_dirs = [
      "$rosen_2d_engine_root",
      "$rosen_2d_engine_root_ui",
    ]

    if (defined(use_new_skia) && use_new_skia) {
      include_dirs += [ "$flutter_root/txt/src" ]
    } else {
      include_dirs += [ "$flutter_root/engine/flutter/third_party/txt/src" ]
    }
  }
  config("rosen_text_config") {
    cflags_cc = [
      "-Wno-implicit-fallthrough",
      "-fvisibility-inlines-hidden",
      "-Os",
    ]
    include_dirs = [
      "$rosen_2d_engine_root",
      "$graphic_2d_root/rosen/modules/2d_graphics/include",
      "$graphic_2d_root/rosen/modules/2d_graphics/src",
    ]
    external_deps = [ "bounds_checking_function:libsec_shared" ]
    if (defined(use_new_skia) && use_new_skia) {
      include_dirs += [ "$flutter_root/txt/src" ]
    } else {
      include_dirs += [ "$flutter_root/engine/flutter/third_party/txt/src" ]
    }
  }
  ohos_source_set("rosen_text_ui") {
    configs = [
      ":rosen_text_ui_config",
      ":rosen_text_config",
    ]
    sources = [
      "font_collection.cpp",
      "typography.cpp",
      "typography_create.cpp",
    ]
    sources += [
      "../properties/font_collection_txt.cpp",
      "../properties/placeholder_run.cpp",
      "../properties/rosen_converter_txt.cpp",
      "../properties/text_style.cpp",
      "../properties/typography_create_txt.cpp",
      "../properties/typography_style.cpp",
      "../properties/typography_txt.cpp",
    ]
    deps = [
      "$graphic_2d_root/rosen/modules/2d_graphics:2d_graphics",
      "//third_party/bounds_checking_function:libsec_static",
    ]
    external_deps = [ "bounds_checking_function:libsec_static" ]
    part_name = "graphic_2d"
    subsystem_name = "graphic"
  }
}
