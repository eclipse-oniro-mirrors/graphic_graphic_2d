# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("$graphic_2d_root/graphic_config.gni")
import("$graphic_2d_root/rosen/modules/render_service_base/config.gni")

config("export_config") {
  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include/render_backend",
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]
}

ohos_static_library("librender_backend") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = false
    cfi_cross_dso = false
    debug = false
  }
  public_configs = [ ":export_config" ]

  include_dirs = [
    "$graphic_2d_root/prebuilts/librarys/gpu/include",
    "//drivers/peripheral/display/interfaces/include/",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/utils/log",
  ]

  defines = []
  defines += gpu_defines
  defines += rs_common_define

  sources = [
    "drawing_context.cpp",
    "render_backend_utils.cpp",
    "render_context_factory.cpp",
    "rs_surface_factory.cpp",
  ]

  external_deps = []

  if (rs_enable_gpu) {
    include_dirs += [ "$graphic_2d_root/interfaces/inner_api/common" ]

    sources += [
      "$graphic_2d_root/rosen/modules/2d_graphics/src/render_context/cache_data.cpp",
      "$graphic_2d_root/rosen/modules/2d_graphics/src/render_context/memory_handler.cpp",
      "$graphic_2d_root/rosen/modules/2d_graphics/src/render_context/shader_cache.cpp",
    ]

    include_dirs += [ "//third_party/skia" ]

    public_deps += [
      "$graphic_2d_root:libvulkan",
      "$graphic_2d_root/frameworks/opengl_wrapper:EGL",
      "$graphic_2d_root/frameworks/opengl_wrapper:GLESv3",
      "$graphic_2d_root/rosen/modules/2d_graphics:2d_graphics",
    ]
    external_deps += [ "openssl:libcrypto_shared" ]
  }

  external_deps += [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "graphic_surface:surface",
    "graphic_surface:sync_fence",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbeget_proxy",
    "init:libbegetutil",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
    "skia:skia_canvaskit",
  ]

  part_name = "graphic_2d"
  subsystem_name = "graphic"
}
