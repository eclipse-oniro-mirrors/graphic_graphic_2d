/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

DECLARE_FILTER(Blur, BLUR,
    ADD_PROPERTY_TAG(Blur, RadiusX),
    ADD_PROPERTY_TAG(Blur, RadiusY)
);

DECLARE_FILTER(DispDistort, DISPLACEMENT_DISTORT,
    ADD_PROPERTY_TAG(DispDistort, Factor),
    ADD_PROPERTY_TAG(DispDistort, Mask)
);

DECLARE_FILTER(SoundWave, SOUND_WAVE,
    ADD_PROPERTY_TAG(SoundWave, ColorA),
    ADD_PROPERTY_TAG(SoundWave, ColorB),
    ADD_PROPERTY_TAG(SoundWave, ColorC),
    ADD_PROPERTY_TAG(SoundWave, ColorProgress),
    ADD_PROPERTY_TAG(SoundWave, Intensity),
    ADD_PROPERTY_TAG(SoundWave, AlphaA),
    ADD_PROPERTY_TAG(SoundWave, AlphaB),
    ADD_PROPERTY_TAG(SoundWave, ProgressA),
    ADD_PROPERTY_TAG(SoundWave, ProgressB),
    ADD_PROPERTY_TAG(SoundWave, TotalAlpha)
);

DECLARE_FILTER(EdgeLight, EDGE_LIGHT,
    ADD_PROPERTY_TAG(EdgeLight, Color),
    ADD_PROPERTY_TAG(EdgeLight, Alpha),
    ADD_PROPERTY_TAG(EdgeLight, Mask),
    ADD_PROPERTY_TAG(EdgeLight, Bloom),
    ADD_PROPERTY_TAG(EdgeLight, UseRawColor)
);

DECLARE_FILTER(Dispersion, DISPERSION,
    ADD_PROPERTY_TAG(Dispersion, Mask),
    ADD_PROPERTY_TAG(Dispersion, Opacity),
    ADD_PROPERTY_TAG(Dispersion, RedOffset),
    ADD_PROPERTY_TAG(Dispersion, GreenOffset),
    ADD_PROPERTY_TAG(Dispersion, BlueOffset)
);

DECLARE_FILTER(BezierWarp, BEZIER_WARP,
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint0),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint1),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint2),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint3),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint4),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint5),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint6),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint7),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint8),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint9),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint10),
    ADD_PROPERTY_TAG(BezierWarp, ControlPoint11)
);

DECLARE_FILTER(DirectionLight, DIRECTION_LIGHT,
    ADD_PROPERTY_TAG(DirectionLight, Mask),
    ADD_PROPERTY_TAG(DirectionLight, Factor),
    ADD_PROPERTY_TAG(DirectionLight, Direction),
    ADD_PROPERTY_TAG(DirectionLight, Color),
    ADD_PROPERTY_TAG(DirectionLight, Intensity)
);

DECLARE_FILTER(MaskTransition, MASK_TRANSITION,
    ADD_PROPERTY_TAG(MaskTransition, Mask),
    ADD_PROPERTY_TAG(MaskTransition, Factor),
    ADD_PROPERTY_TAG(MaskTransition, Inverse)
);

DECLARE_FILTER(VariableRadiusBlur, VARIABLE_RADIUS_BLUR,
    ADD_PROPERTY_TAG(VariableRadiusBlur, Radius),
    ADD_PROPERTY_TAG(VariableRadiusBlur, Mask)
);

DECLARE_FILTER(ContentLight, CONTENT_LIGHT,
    ADD_PROPERTY_TAG(ContentLight, Position),
    ADD_PROPERTY_TAG(ContentLight, Color),
    ADD_PROPERTY_TAG(ContentLight, Intensity),
    ADD_PROPERTY_TAG(ContentLight, RotationAngle)
);
