# Copyright (c) 2023-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

ohos_source_set("render_frame_trace") {
  include_dirs = [ "include" ]
  sources = [
    "src/frame_rate_report.cpp",
    "src/render_frame_trace.cpp",
  ]
  cflags = [ "-fstack-protector-all" ]
  if (is_ohos && is_clang && (target_cpu == "arm" || target_cpu == "arm64")) {
    if (!use_libfuzzer) {
      cflags += [ "-flto=thin" ]
    }
    if (enhanced_opt) {
      if (!use_libfuzzer) {
        cflags += [ "-fwhole-program-vtables" ]
      }
    }
  }
  external_deps = []
  if (is_arkui_x) {
    deps = [ "//third_party/jsoncpp:jsoncpp_static" ]
  } else {
    external_deps += [ "jsoncpp:jsoncpp" ]
  }
  if (!build_ohos_sdk) {
    external_deps += [
      "ipc:ipc_single",
      "qos_manager:concurrent_task_client",
    ]
    if (!is_arkui_x) {
      defines = [ "QOS_MANAGER" ]
    }
  }
  if (defined(global_parts_info)) {
    if (defined(global_parts_info.resourceschedule_frame_aware_sched)) {
      sources += [ "src/render_frame_trace_impl.cpp" ]
      external_deps += [ "frame_aware_sched:frame_trace_intf" ]
      defines += [ "FRAME_TRACE_ENABLE" ]
    }
  }
  if (defined(global_parts_info) &&
      defined(global_parts_info.resourceschedule_resource_schedule_service)) {
    external_deps += [ "resource_schedule_service:ressched_client" ]
    defines += [ "RES_SCHED_ENABLE" ]
  }
  part_name = "graphic_2d"
  subsystem_name = "graphic"
}
