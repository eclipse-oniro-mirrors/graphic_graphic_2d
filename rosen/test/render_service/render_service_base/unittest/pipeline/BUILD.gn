# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/ace_platforms.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic/rosen_engine/render_service_base/Pipeline"

##############################  RSBaseRenderNodeTest  ##################################
ohos_unittest("RSBaseRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_base_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSCanvasDrawingRenderNodeTest  ##################################
ohos_unittest("RSCanvasDrawingRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_canvas_drawing_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSCanvasRenderNodeTest  ##################################
ohos_unittest("RSCanvasRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_canvas_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSContextTest  ##################################
ohos_unittest("RSContextTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_context_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSDirtyRegionManagerTest  ##################################
ohos_unittest("RSDirtyRegionManagerTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_dirty_region_manager_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSDisplayRenderNodeTest  ##################################
ohos_unittest("RSDisplayRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_display_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSDrawCmdListTest  ##################################
ohos_unittest("RSDrawCmdListTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_draw_cmd_list_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSDrawCmdTest  ##################################
ohos_unittest("RSDrawCmdTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_draw_cmd_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSEffectRenderNodeTest  ##################################
ohos_unittest("RSEffectRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_effect_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSOcclusionConfigTest  ##################################
ohos_unittest("RSOcclusionConfigTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_occlusion_config_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSPaintFilterCanvasTest  ##################################
ohos_unittest("RSPaintFilterCanvasTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_paint_filter_canvas_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSProxyRenderNodeTest  ##################################
ohos_unittest("RSProxyRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_proxy_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSExtendRecordingCanvasTest  ##################################
ohos_unittest("RSExtendRecordingCanvasTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_recording_canvas_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderContentTest  ##################################
ohos_unittest("RSRenderContentTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_content_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderDisplaySyncTest  ##################################
ohos_unittest("RSRenderDisplaySyncTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_display_sync_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderFrameRateLinkerMapTest  ##################################
ohos_unittest("RSRenderFrameRateLinkerMapTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_frame_rate_linker_map_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderFrameRateLinkerTest  ##################################
ohos_unittest("RSRenderFrameRateLinkerTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_frame_rate_linker_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderNodeAutocacheTest  ##################################
ohos_unittest("RSRenderNodeAutocacheTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_node_autocache_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderNodeGCTest  ##################################
ohos_unittest("RSRenderNodeGCTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_node_gc_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderNodeMapTest  ##################################
ohos_unittest("RSRenderNodeMapTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_node_map_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderNodeTest  ##################################
ohos_unittest("RSRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRenderNodeTest2  ##################################
ohos_unittest("RSRenderNodeTest2") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_render_node_test2.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSRootRenderNodeTest  ##################################
ohos_unittest("RSRootRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_root_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSSingleFrameComposerTest  ##################################
ohos_unittest("RSSingleFrameComposerTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_single_frame_composer_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSSurfaceHandlerTest  ##################################
ohos_unittest("RSSurfaceHandlerTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_surface_handler_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSSurfaceRenderNodeTest  ##################################
ohos_unittest("RSSurfaceRenderNodeTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_surface_render_node_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSSurfaceRenderNodeTwoTest  ##################################
ohos_unittest("RSSurfaceRenderNodeTwoTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_surface_render_node_two_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSTaskDispatcherTest  ##################################
ohos_unittest("RSTaskDispatcherTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_task_dispatcher_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  RSUniRenderJudgementTest  ##################################
ohos_unittest("RSUniRenderJudgementTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "rs_uni_render_judgement_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

##############################  SKResourceManagerTest  ##################################
ohos_unittest("SKResourceManagerTest") {
  module_out_path = module_output_path
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }

  sources = [ "sk_resource_manager_test.cpp" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
  configs = [
    ":render_test",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client:render_service_client_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  subsystem_name = "graphic"
}

###############################################################################
config("render_test") {
  visibility = [ ":*" ]
  include_dirs = [
    "$ace_root",
    "$graphic_2d_root/rosen/modules/render_service_base",
  ]
}

group("unittest") {
  testonly = true

  deps = [
    ":RSBaseRenderNodeTest",
    ":RSCanvasDrawingRenderNodeTest",
    ":RSCanvasRenderNodeTest",
    ":RSContextTest",
    ":RSDirtyRegionManagerTest",
    ":RSDisplayRenderNodeTest",
    ":RSDrawCmdListTest",
    ":RSDrawCmdTest",
    ":RSEffectRenderNodeTest",
    ":RSExtendRecordingCanvasTest",
    ":RSOcclusionConfigTest",
    ":RSPaintFilterCanvasTest",
    ":RSProxyRenderNodeTest",
    ":RSRenderContentTest",
    ":RSRenderDisplaySyncTest",
    ":RSRenderFrameRateLinkerMapTest",
    ":RSRenderFrameRateLinkerTest",
    ":RSRenderNodeAutocacheTest",
    ":RSRenderNodeGCTest",
    ":RSRenderNodeMapTest",
    ":RSRenderNodeTest",
    ":RSRenderNodeTest2",
    ":RSRootRenderNodeTest",
    ":RSSingleFrameComposerTest",
    ":RSSurfaceHandlerTest",
    ":RSSurfaceRenderNodeTest",
    ":RSSurfaceRenderNodeTwoTest",
    ":RSTaskDispatcherTest",
    ":RSUniRenderJudgementTest",
    ":SKResourceManagerTest",
  ]
}
