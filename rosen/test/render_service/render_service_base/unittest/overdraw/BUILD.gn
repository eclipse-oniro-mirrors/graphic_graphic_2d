# Copyright (c) 2022-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic_2d/rosen_engine/render_service_client/pipeline"

ohos_unittest("overdraw_test") {
  module_out_path = module_output_path

  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines = [ "USE_ROSEN_DRAWING" ]
  }
  sources = [
    "rs_cpu_overdraw_canvas_listener_test.cpp",
    "rs_gpu_overdraw_canvas_listener_test.cpp",
    "rs_listened_canvas_test.cpp",
    "rs_overdraw_controller_test.cpp",
  ]

  cflags = [
    "-Dprivate = public",
    "-Dprotected = public",
  ]

  deps = [
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base:librender_service_base",
    "//foundation/graphic/graphic_2d/utils/test_header:test_header",
    "//third_party/googletest:gmock",
  ]
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    public_deps = [ "$graphic_2d_root/rosen/modules/2d_graphics:2d_graphics" ]
  }
  external_deps = [
    "hilog:libhilog",
    "skia:skia_canvaskit",
  ]
  part_name = "graphic_2d"
  subsystem_name = "graphic"
}

group("unittest") {
  testonly = true

  deps = [ ":overdraw_test" ]
}
