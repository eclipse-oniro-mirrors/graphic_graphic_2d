# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/ace_platforms.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic/rosen_engine/render_service_base/render"

##############################  RSRenderServiceBaseRenderTest  ##################################
ohos_unittest("RSRenderServiceBaseRenderTest") {
  module_out_path = module_output_path

  sources = [
    "rs_aibar_shader_filter_test.cpp",
    "rs_attraction_effect_filter_test.cpp",
    "rs_blur_filter_test.cpp",
    "rs_border_test.cpp",
    "rs_color_extract_test.cpp",
    "rs_color_picker_test.cpp",
    "rs_colorful_shadow_filter_test.cpp",
    "rs_drawing_filter_test.cpp",
    "rs_filter_test.cpp",
    "rs_fly_out_shader_filter_test.cpp",
    "rs_foreground_effect_filter_test.cpp",
    "rs_image_base_test.cpp",
    "rs_image_cache_test.cpp",
    "rs_image_test.cpp",
    "rs_kawase_blur_test.cpp",
    "rs_light_up_effect_filter_test.cpp",
    "rs_magnifier_shader_filter_test.cpp",
    "rs_mask_test.cpp",
    "rs_maskcolor_shader_filter_test.cpp",
    "rs_material_filter_test.cpp",
    "rs_motion_blur_filter_test.cpp",
    "rs_path_test.cpp",
    "rs_pixel_map_shader_test.cpp",
    "rs_pixel_map_util_test.cpp",
    "rs_resource_manager_test.cpp",
    "rs_shader_test.cpp",
    "rs_shadow_test.cpp",
    "rs_skia_filter_test.cpp",
    "rs_spherize_effect_filter_test.cpp",
    "rs_typeface_cache_test.cpp",
    "rs_water_ripple_shader_filter_test.cpp",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  configs = [
    ":render_test",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/graphics_effect/include",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/drawing/engine_adapter/skia_adapter/",
    "//foundation/graphic/graphic_2d/rosen/include",
    "//foundation/graphic/graphic_2d/rosen/test/include",
    "$graphic_2d_root/rosen/modules/platform/eventhandler",
    "$graphic_2d_root/utils/log",
  ]

  deps = [
    "../../../../../modules/render_service_base:librender_service_base",
    "../../../../../modules/render_service_base:render_service_base_src",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "graphic_surface:surface",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
    "init:libbegetutil",
    "skia:skia_canvaskit",
  ]

  if (use_video_processing_engine) {
    external_deps +=
        [ "drivers_interface_display:display_commontype_idl_headers" ]
    defines = [ "USE_VIDEO_PROCESSING_ENGINE" ]
    include_dirs += [ "$video_processing_engine_root/interfaces/inner_api" ]
    external_deps += [ "video_processing_engine:videoprocessingengine" ]
    sources += [ "rs_colorspace_convert_test.cpp" ]
  }

  subsystem_name = "graphic"
}

###############################################################################
config("render_test") {
  visibility = [ ":*" ]
  include_dirs = [
    "$ace_root",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base",
  ]
}

group("unittest") {
  testonly = true

  deps = [ ":RSRenderServiceBaseRenderTest" ]
}
