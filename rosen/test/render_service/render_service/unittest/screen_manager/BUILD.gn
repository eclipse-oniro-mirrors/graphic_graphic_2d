# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/ace_platforms.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic_2d/rosen_engine/render_service/screen_manager"

##############################  RSScreenManagerTest  ##################################
ohos_unittest("RSScreenManagerTest") {
  module_out_path = module_output_path

  sources = [
    "../pipeline/mock/mock_hdi_device.cpp",
    "rs_screen_manager_test.cpp",
  ]

  configs = [ ":screen_manager_test" ]

  include_dirs = [
    "//foundation/graphic/graphic_2d/rosen/modules/render_service/core",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base/src",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client/core",
    "//foundation/graphic/graphic_2d/rosen/include",
    "//foundation/graphic/graphic_2d/rosen/test/include",
    "//foundation/barrierfree/accessibility/interfaces/innerkits/acfwk/include",
    "$graphic_2d_root/rosen/test/render_service/render_service/unittest/pipeline/mock",
  ]

  deps = [
    "//foundation/graphic/graphic_2d/rosen/modules/composer:libcomposer",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service:librender_service",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base:librender_service_base",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
    defines = [ "RS_SUBSCRIBE_SENSOR_ENABLE" ]
  }

  subsystem_name = "graphic"

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
}

##############################  RSScreenTest  ##################################
ohos_unittest("RSScreenTest") {
  module_out_path = module_output_path

  sources = [
    "../pipeline/mock/mock_hdi_device.cpp",
    "rs_screen_test.cpp",
  ]

  configs = [ ":screen_test" ]

  include_dirs = [
    "//foundation/graphic/graphic_2d/rosen/modules/render_service/core",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base/src",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client/core",
    "//foundation/graphic/graphic_2d/rosen/include",
    "//foundation/graphic/graphic_2d/rosen/test/include",
    "//foundation/barrierfree/accessibility/interfaces/innerkits/acfwk/include",
    "$graphic_2d_root/rosen/test/render_service/render_service/unittest/pipeline/mock",
  ]

  deps = [
    "//foundation/graphic/graphic_2d/rosen/modules/composer:libcomposer",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service:librender_service",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base:librender_service_base",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]

  subsystem_name = "graphic"

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
}

###############################################################################
config("screen_manager_test") {
  #visibility = [ ":*" ]
  include_dirs =
      [ "//foundation/graphic/graphic_2d/rosen/modules/render_service/core" ]
}

###############################################################################
config("screen_test") {
  #visibility = [ ":*" ]
  include_dirs =
      [ "//foundation/graphic/graphic_2d/rosen/modules/render_service/core" ]
}

group("unittest") {
  testonly = true

  deps = [
    ":RSScreenManagerTest",
    ":RSScreenTest",
  ]
}
