# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic_2d/graphic_2d/rosen_engine/render_service/feature"

group("unittest") {
  testonly = true
  deps = [
    ":RSAncoManagerTest",
    ":RSDrawWindowCacheTest",
    ":RSHdrUtilTest",
    ":RSOcclusionHandlerTest",
    ":RSOcclusionNodeTest",
    ":RSOpincDrawCacheTest",
    ":RSOpincManagerTest",
    ":RSSubThreadCacheTest",
    ":RSSurfaceCaptureParallelTaskTest",
    ":RSSurfaceCaptureTaskTest",
    ":RSUiCaptureTaskParallelTest",
    ":RSUiCaptureSoloTaskParallelTest",
    ":RSUniDirtyComputeUtilTest",
    ":RSUniHwcComputeUtilTest",
    ":RSUniHwcPrevalidateUtilTest",
    ":RSUniUiCaptureTest",
    ":RSVBlankIdleCorrectorTest",
    ":RSWindowKeyFrameTest",
  ]
  if (graphic_2d_feature_enable_rspipeline) {
    deps += [ ":RSUifirstManagerTest" ]
  }
  if (rs_enable_parallel_render && rs_enable_gpu) {
    deps += [
      ":RSSubThreadManagerTest",
      ":RSSubThreadTest",
      ":RSVsyncRateReduceManagerTest",
    ]
  }
  if (rs_enable_eglimage) {
    deps += [ ":RSEglImageManagerTest" ]
  }
  if (graphic_2d_feature_overlay_display_enable) {
    deps += [ ":OverlayDisplayTest" ]
  }
}

###############################################################################
config("capture_test") {
  include_dirs = [ "$graphic_2d_root/rosen/modules/render_service/core" ]
}

## Build RSOcclusionHandlerTest
ohos_unittest("RSOcclusionHandlerTest") {
  module_out_path = module_output_path
  sources = [ "occlusion_culling/rs_occlusion_handler_test.cpp" ]
  deps = [ ":rs_test_common" ]
  include_dirs = [ "$graphic_2d_root/rosen/modules/render_service_base/include" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
}

## Build RSOcclusionNodeTest
ohos_unittest("RSOcclusionNodeTest") {
  module_out_path = module_output_path
  sources = [ "occlusion_culling/rs_occlusion_node_test.cpp" ]
  deps = [ ":rs_test_common" ]
  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
}

## Build RSSurfaceCaptureParallelTaskTest
ohos_unittest("RSSurfaceCaptureParallelTaskTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "capture/rs_surface_capture_task_parallel_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  include_dirs = [ "$graphic_2d_root/rosen/modules/render_service_base/include" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSSurfaceCaptureTaskTest
ohos_unittest("RSSurfaceCaptureTaskTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "capture/rs_surface_capture_task_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  include_dirs = [ "$graphic_2d_root/rosen/modules/render_service_base/include" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSHdrUtilTest
ohos_unittest("RSHdrUtilTest") {
  module_out_path = module_output_path
  sources = [ "hdr/rs_hdr_util_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSUiCaptureTaskParallelTest
ohos_unittest("RSUiCaptureTaskParallelTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "capture/rs_ui_capture_task_parallel_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  include_dirs = [ "$graphic_2d_root/rosen/modules/render_service_base/include" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSUiCaptureSoloTaskParallelTest
ohos_unittest("RSUiCaptureSoloTaskParallelTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "capture/rs_ui_capture_solo_task_parallel_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  include_dirs = [ "../../../../../modules/render_service_base/include" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSUniUiCaptureTest
ohos_unittest("RSUniUiCaptureTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "capture/rs_uni_ui_capture_test.cpp",
  ]
  deps = [
    ":rs_test_common",
    "$graphic_2d_root/rosen/modules/render_service_base/src/platform:platform",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
    external_deps += [ "accessibility:accessibilityconfig" ]
    external_deps += [ "accessibility:accessibility_common" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSUifirstManagerTest
ohos_unittest("RSUifirstManagerTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "uifirst/rs_uifirst_manager_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
}

## Build RSOpincDrawCacheTest
ohos_unittest("RSOpincDrawCacheTest") {
  module_out_path = module_output_path
  sources = [
    "opinc/rs_opinc_draw_cache_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
}

## Build RSOpincManagerTest
ohos_unittest("RSOpincManagerTest") {
  module_out_path = module_output_path
  sources = [ "opinc/rs_opinc_manager_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
}

## Build RSDrawWindowCacheTest
ohos_unittest("RSDrawWindowCacheTest") {
  module_out_path = module_output_path
  sources = [ "uifirst/rs_draw_window_cache_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
}

## Build RSSubThreadManagerTest
ohos_unittest("RSSubThreadManagerTest") {
  module_out_path = module_output_path
  sources = [ "uifirst/rs_sub_thread_manager_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSSubThreadTest
ohos_unittest("RSSubThreadTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/test/unittest_main/test_main.cpp",
    "uifirst/rs_sub_thread_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSSubThreadCacheTest
ohos_unittest("RSSubThreadCacheTest") {
  module_out_path = module_output_path
  sources = [ "uifirst/rs_sub_thread_cache_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
}

## Build RSVsyncRateReduceManagerTest
ohos_unittest("RSVsyncRateReduceManagerTest") {
  module_out_path = module_output_path
  sources = [ "vrate/rs_vsync_rate_reduce_manager_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
}

## Build RSUniHwcPrevalidateUtilTest
ohos_unittest("RSUniHwcPrevalidateUtilTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "hwc/rs_uni_hwc_prevalidate_util_test.cpp",
  ]
  deps = [
    ":rs_test_common",
    "$graphic_2d_root/rosen/modules/render_service_base/src/platform:platform",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
    external_deps += [ "accessibility:accessibilityconfig" ]
    external_deps += [ "accessibility:accessibility_common" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSEglImageManagerTest
ohos_unittest("RSEglImageManagerTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "gpuComposition/rs_egl_image_manager_test.cpp",
  ]
  deps = [
    ":rs_test_common",
    "$graphic_2d_root/rosen/modules/render_service_base/src/platform:platform",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
    external_deps += [ "accessibility:accessibilityconfig" ]
    external_deps += [ "accessibility:accessibility_common" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSVBlankIdleCorrectorTest
ohos_unittest("RSVBlankIdleCorrectorTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "hyper_graphic_manager/rs_vblank_idle_corrector_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "ffrt:libffrt",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSAncoManagerTest
ohos_unittest("RSAncoManagerTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "anco_manager/rs_anco_manager_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSWindowKeyFrameTest
ohos_unittest("RSWindowKeyFrameTest") {
  module_out_path = module_output_path
  sources = [
    "$graphic_2d_root/rosen/modules/render_service_base/src/pipeline/rs_canvas_render_node.cpp",
    "window_keyframe/rs_window_keyframe_buffer_test.cpp",
    "window_keyframe/rs_window_keyframe_node_info_test.cpp",
  ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
}

## Build OverlayDisplayTest
ohos_unittest("OverlayDisplayTest") {
  module_out_path = module_output_path
  sources = [ "overlay_display/overlay_display_test.cpp" ]
  deps = [
    ":rs_test_common",
    "$graphic_2d_root/rosen/modules/render_service_base/src/platform:platform",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
    external_deps += [ "accessibility:accessibilityconfig" ]
    external_deps += [ "accessibility:accessibility_common" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSUniHwcComputeUtilTest
ohos_unittest("RSUniHwcComputeUtilTest") {
  module_out_path = module_output_path
  sources = [ "hwc/rs_uni_hwc_compute_util_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build RSUniDirtyComputeUtilTest
ohos_unittest("RSUniDirtyComputeUtilTest") {
  module_out_path = module_output_path
  sources = [ "dirty/rs_uni_dirty_compute_util_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
  ]
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [ "USE_ROSEN_DRAWING" ]
  }
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    external_deps += [
      "drivers_interface_display:libdisplay_commontype_proxy_1.0",
      "video_processing_engine:videoprocessingengine",
    ]
  }
}

## Build rs_test_common.a {{{
config("rs_test_common_public_config") {
  include_dirs = [
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/config",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/hgm_screen_manager",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/soft_vsync_manager",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/utils",
    "$graphic_2d_root/rosen/modules/render_service/core",
    "$graphic_2d_root/rosen/modules/render_service/core/feature_cfg",
    "$graphic_2d_root/rosen/modules/render_service/core/feature_cfg/feature_param",
    "$graphic_2d_root/rosen/modules/render_service/core/feature_cfg/feature_param/extend_feature",
    "$graphic_2d_root/rosen/modules/render_service/core/feature_cfg/feature_param/performance_feature",
    "$graphic_2d_root/rosen/modules/render_service/core/feature_cfg/xml_parser",
    "$graphic_2d_root/rosen/modules/render_service/core/feature_cfg/xml_parser/extend_feature_parser",
    "$graphic_2d_root/rosen/modules/render_service/core/feature_cfg/xml_parser/performance_feature_parser",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
    "$graphic_2d_root/rosen/test/include",
    "$graphic_2d_root/rosen/test/render_service/render_service/unittest",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
}

ohos_static_library("rs_test_common") {
  visibility = [ ":*" ]
  testonly = true
  defines = []
  defines += gpu_defines
  sources = [ "../pipeline/rs_test_util.cpp" ]
  public_configs = [ ":rs_test_common_public_config" ]

  public_deps = [
    "$graphic_2d_root/rosen/modules/composer:libcomposer",
    "$graphic_2d_root/rosen/modules/render_service:librender_service",
    "$graphic_2d_root/rosen/modules/render_service_base:librender_service_base",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
  ]

  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    public_deps += [ "$graphic_2d_root/rosen/modules/2d_graphics:2d_graphics" ]
    defines += [ "USE_ROSEN_DRAWING" ]
  }

  external_deps = []

  public_external_deps = [
    "accessibility:accessibilityconfig",
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
  ]

  if (use_memmgr_plugin) {
    public_external_deps += [ "memmgr_override:memmgrclient" ]
  } else if (use_memmgr) {
    public_external_deps += [ "memmgr:memmgrclient" ]
  }

  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }

  subsystem_name = "graphic"
  part_name = "graphic_2d"
}
