# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic/rosen_engine/render_service/pipeline"

group("systemtest") {
  testonly = true

  deps = [
    ":RSBaseRenderEngineTest",
    ":RSDropFrameProcessorSystemTest",
    ":RSRenderServiceTest",
  ]
  if (graphic_2d_feature_rs_enable_uni_render) {
    deps += [ ":RSUniRenderTest" ]
  }
}

###############################################################################
config("pipeline_test") {
  include_dirs = [ "$graphic_2d_root/rosen/modules/render_service/core" ]
}

## Build RSBaseRenderEngineTest
ohos_systemtest("RSBaseRenderEngineTest") {
  module_out_path = module_output_path
  include_dirs = []
  sources = [ "rs_base_render_engine_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = []
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    include_dirs += [ "$video_processing_engine_root/interfaces/inner_api" ]
    external_deps +=
        [ "drivers_interface_display:display_commontype_idl_headers" ]
  }
}

## Build RSDropFrameProcessorSystemTest
ohos_systemtest("RSDropFrameProcessorSystemTest") {
  module_out_path = module_output_path
  sources = [ "rs_drop_frame_processor_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = []
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    include_dirs += [ "$video_processing_engine_root/interfaces/inner_api" ]
    external_deps +=
        [ "drivers_interface_display:display_commontype_idl_headers" ]
  }
}

## Build RSRenderServiceTest
ohos_systemtest("RSRenderServiceTest") {
  module_out_path = module_output_path
  sources = [ "rs_render_service_test.cpp" ]
  deps = [ ":rs_test_common" ]
  external_deps = []
  if (defined(global_parts_info) && defined(global_parts_info.sensors_sensor)) {
    external_deps += [ "sensor:sensor_interface_native" ]
  }
  defines = []
  defines += gpu_defines
  if (defined(use_video_processing_engine) && use_video_processing_engine) {
    include_dirs = []
    defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
    include_dirs += [ "$video_processing_engine_root/interfaces/inner_api" ]
    external_deps +=
        [ "drivers_interface_display:display_commontype_idl_headers" ]
  }
}

if (graphic_2d_feature_rs_enable_uni_render) {
  ## Build RSUniRenderTest
  ohos_systemtest("RSUniRenderTest") {
    module_out_path = module_output_path
    sources = [ "rs_uni_render_test.cpp" ]
    deps = [ ":rs_test_common" ]
    external_deps = [
      "access_token:libaccesstoken_sdk",
      "access_token:libnativetoken",
      "access_token:libtoken_setproc",
      "sensor:sensor_interface_native",
    ]
    defines = []
    defines += gpu_defines
    if (defined(use_rosen_drawing) && use_rosen_drawing) {
      defines += [ "USE_ROSEN_DRAWING" ]
    }
    if (defined(use_video_processing_engine) && use_video_processing_engine) {
      include_dirs = []
      defines += [ "USE_VIDEO_PROCESSING_ENGINE" ]
      include_dirs += [ "$video_processing_engine_root/interfaces/inner_api" ]
      external_deps +=
          [ "drivers_interface_display:display_commontype_idl_headers" ]
    }
  }
}

## Build rs_test_common.a {{{
config("rs_test_common_public_config") {
  include_dirs = [
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/modules/render_service/core",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
    "$graphic_2d_root/rosen/test/include",
    "//foundation/barrierfree/accessibility/interfaces/innerkits/acfwk/include",
    "//foundation/window/window_manager/interfaces/innerkits",
  ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
}

ohos_static_library("rs_test_common") {
  visibility = [ ":*" ]
  testonly = true
  defines = []
  defines += gpu_defines

  public_configs = [ ":rs_test_common_public_config" ]

  public_deps = [
    "$graphic_2d_root/rosen/modules/composer:libcomposer",
    "$graphic_2d_root/rosen/modules/render_service:librender_service",
    "$graphic_2d_root/rosen/modules/render_service_base:librender_service_base",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "//foundation/window/window_manager/wm:libwm",
    "//foundation/window/window_manager/wmserver:libwms",
    "//third_party/googletest:gtest_main",
  ]

  public_deps += [ "../../../../../modules/2d_graphics:2d_graphics" ]

  public_external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_core",
    "memmgr:memmgrclient",
  ]

  subsystem_name = "graphic"
  part_name = "graphic_2d"
}
