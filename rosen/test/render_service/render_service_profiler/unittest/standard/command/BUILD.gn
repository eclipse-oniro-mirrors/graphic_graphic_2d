# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")
import("$graphic_2d_root/rosen/modules/render_service_base/config.gni")

module_output_path =
    "graphic_2d/graphic_2d/rosen/modules/render_service_profiler/standard"

group("unittest") {
  testonly = true

  deps = [
    ":RSAnimationCommandTest",
    ":RSCanvasDrawingNodeCommandTest",
    ":RSCanvasNodeCommandTest",
    ":RSCommandTest",
    ":RSDisplayNodeCommandTest",
    ":RSEffectNodeCommandTest",
    ":RSFrameRateLinkerCommandTest",
    ":RSNodeCommandTest",
    ":RSNodeShowingCommandTest",
    ":RSProxyNodeCommandTest",
    ":RSRootNodeCommandTest",
    ":RSSurfaceNodeCommandTest",
  ]
}

## Build RSAnimationCommandTest
ohos_unittest("RSAnimationCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_animation_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSCanvasDrawingNodeCommandTest
ohos_unittest("RSCanvasDrawingNodeCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_canvas_drawing_node_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSCanvasNodeCommandTest
ohos_unittest("RSCanvasNodeCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_canvas_node_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSCommandTest
ohos_unittest("RSCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSDisplayNodeCommandTest
ohos_unittest("RSDisplayNodeCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_display_node_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSEffectNodeCommandTest
ohos_unittest("RSEffectNodeCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_effect_node_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSFrameRateLinkerCommandTest
ohos_unittest("RSFrameRateLinkerCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_frame_rate_linker_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSNodeCommandTest
ohos_unittest("RSNodeCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_node_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSNodeShowingCommandTest
ohos_unittest("RSNodeShowingCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_node_showing_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSProxyNodeCommandTest
ohos_unittest("RSProxyNodeCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_proxy_node_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSRootNodeCommandTest
ohos_unittest("RSRootNodeCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_root_node_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

## Build RSSurfaceNodeCommandTest
ohos_unittest("RSSurfaceNodeCommandTest") {
  module_out_path = module_output_path
  sources = [ "rs_surface_node_command_test.cpp" ]
  deps = [ ":rs_test_command" ]
}

config("rs_test_command_config") {
  include_dirs =
      [ "$graphic_2d_root/rosen/modules/render_service_base/include" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
}

ohos_static_library("rs_test_command") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  visibility = [ ":*" ]
  testonly = true
  defines = []

  public_configs = [ ":rs_test_command_config" ]

  public_deps = [
    "$graphic_2d_root/rosen/modules/render_service:librender_service",
    "$graphic_2d_root/rosen/modules/render_service_base:librender_service_base",
  ]

  public_external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gtest_main",
  ]

  subsystem_name = "graphic"
  part_name = "graphic_2d"
}
