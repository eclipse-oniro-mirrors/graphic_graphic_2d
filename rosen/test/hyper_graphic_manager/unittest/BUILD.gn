# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#

#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

ohos_unittest("hyper_graphic_manager_test") {
  module_out_path = "graphic_2d/graphic_2d/hyper_graphic_manager"

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  if (is_ohos && is_clang && (target_cpu == "arm" || target_cpu == "arm64")) {
    if (!use_libfuzzer) {
      cflags += [ "-flto=thin" ]
    }
    if (enhanced_opt) {
      if (!use_libfuzzer) {
        cflags += [ "-fwhole-program-vtables" ]
      }
    }
  }

  sources = [
    "hgm_app_page_url_strategy_test.cpp",
    "hgm_energy_consumption_policy_test.cpp",
    "hgm_frame_rate_manager_test.cpp",
    "hgm_hfbc_config_test.cpp",
    "hgm_idle_detector_test.cpp",
    "hgm_lru_cache_test.cpp",
    "hgm_multi_app_strategy_test.cpp",
    "hgm_pointer_manager_test.cpp",
    "hgm_screen_info_test.cpp",
    "hgm_task_handle_thread_test.cpp",
    "hgm_touch_manager_test.cpp",
    "hgm_vsync_generator_controller_test.cpp",
    "hgm_xml_parser_test.cpp",
    "hyper_graphic_manager_test.cpp",
    "rs_frame_rate_vote_test.cpp",
    "rs_video_frame_rate_vote_test.cpp",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/config",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/hgm_screen_manager",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/utils",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/frame_rate_vote",
    "$graphic_2d_root/rosen/modules/render_service_base/include",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager:libhyper_graphic_manager",
    "$graphic_2d_root/rosen/modules/render_service_base:librender_service_base",
    "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
    "$graphic_2d_root/utils/test_header:test_header",
  ]

  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "graphic_surface:surface",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbeget_proxy",
    "init:libbegetutil",
    "libxml2:libxml2",
  ]

  part_name = "graphic_2d"
  subsystem_name = "graphic"
}

group("unittest") {
  testonly = true

  deps = [ ":hyper_graphic_manager_test" ]
}
