# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#

#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

hgm_test_deps = [
  "$graphic_2d_root/rosen/modules/composer:libcomposer",
  "$graphic_2d_root/rosen/modules/render_frame_trace:render_frame_trace",
  "$graphic_2d_root/rosen/modules/render_service_base:librender_service_base",
  "$graphic_2d_root/rosen/modules/render_service_base:render_service_base_src",
  "$graphic_2d_root/utils/test_header:test_header",
]

hgm_test_external_deps = [
  "c_utils:utils",
  "eventhandler:libeventhandler",
  "ffrt:libffrt",
  "googletest:gmock",
  "graphic_surface:surface",
  "hicollie:libhicollie",
  "hilog:libhilog",
  "hisysevent:libhisysevent",
  "hitrace:hitrace_meter",
  "ipc:ipc_core",
  "ipc:ipc_single",
  "init:libbeget_proxy",
  "init:libbegetutil",
  "libxml2:libxml2",
]

ohos_unittest("hyper_graphic_manager_test") {
  module_out_path = "graphic_2d/graphic_2d/hyper_graphic_manager"

  sources = [
    "hgm_app_page_url_strategy_test.cpp",
    "hgm_command_test.cpp",
    "hgm_energy_consumption_policy_test.cpp",
    "hgm_hfbc_config_test.cpp",
    "hgm_idle_detector_test.cpp",
    "hgm_lru_cache_test.cpp",
    "hgm_multi_app_strategy_test.cpp",
    "hgm_screen_info_test.cpp",
    "hgm_task_handle_thread_test.cpp",
    "hgm_vsync_generator_controller_test.cpp",
    "hgm_xml_parser_test.cpp",
    "hyper_graphic_manager_test.cpp",
    "rs_frame_rate_vote_test.cpp",
    "rs_video_frame_rate_vote_test.cpp",
  ]

  deps = [ ":hgm_test" ]
  deps += hgm_test_deps
  external_deps = hgm_test_external_deps
}

ohos_unittest("frame_rate_manager_test") {
  module_out_path = "graphic_2d/graphic_2d/hyper_graphic_manager"

  sources = [
    "hgm_frame_rate_manager_test.cpp",
    "hgm_soft_vsync_manager_test.cpp",
    "hgm_voter_test.cpp",
    "hgm_one_shot_timer_test.cpp",
  ]

  deps = [ ":hgm_test" ]
  deps += hgm_test_deps
  external_deps = hgm_test_external_deps
}

ohos_unittest("hgm_pointer_manager_test") {
  module_out_path = "graphic_2d/graphic_2d/hyper_graphic_manager"

  sources = [ "hgm_pointer_manager_test.cpp" ]

  deps = [ ":hgm_test" ]
  deps += hgm_test_deps
  external_deps = hgm_test_external_deps
}

ohos_unittest("hgm_touch_manager_test") {
  module_out_path = "graphic_2d/graphic_2d/hyper_graphic_manager"

  sources = [ "hgm_touch_manager_test.cpp" ]

  deps = [ ":hgm_test" ]
  deps += hgm_test_deps
  external_deps = hgm_test_external_deps
}

ohos_unittest("hgm_frame_voter_test") {
  module_out_path = "graphic_2d/graphic_2d/hyper_graphic_manager"

  sources = [ "hgm_frame_voter_test.cpp" ]

  deps = [ ":hgm_test" ]
  deps += hgm_test_deps
  external_deps = hgm_test_external_deps
}

ohos_unittest("hgm_user_define_test") {
  module_out_path = "graphic_2d/graphic_2d/hyper_graphic_manager"

  sources = [ "hgm_user_define_test.cpp" ]
  if (defined(graphic_2d_hgm_configs.vendor_root)) {
    sources += graphic_2d_hgm_configs.libhyper_graphic_manager_ext_test
  }

  deps = [ ":hgm_test" ]
  deps += hgm_test_deps
  external_deps = hgm_test_external_deps
}

group("unittest") {
  testonly = true

  deps = [
    ":frame_rate_manager_test",
    ":hgm_frame_voter_test",
    ":hgm_pointer_manager_test",
    ":hgm_touch_manager_test",
    ":hgm_user_define_test",
    ":hyper_graphic_manager_test"
  ]
}

## Build hgm_test.a
  config("hgm_test_public_config") {
    include_dirs = [
      "$graphic_2d_root/rosen/modules/composer/hdi_backend/include",
      "$graphic_2d_root/rosen/modules/composer/vsync/include",
      "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/config",
      "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager",
      "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/hgm_screen_manager",
      "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/soft_vsync_manager",
      "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/utils",
      "$graphic_2d_root/rosen/modules/hyper_graphic_manager/frame_rate_vote",
      "$graphic_2d_root/rosen/modules/platform/ipc_core",
      "$graphic_2d_root/rosen/modules/render_service/core",
      "$graphic_2d_root/rosen/modules/render_service_base/include",
      "$graphic_2d_root/rosen/modules/render_service_base/src",
      "$graphic_2d_root/rosen/test/hyper_graphic_manager/unittest",
      "$graphic_2d_root/interfaces/inner_api/composer",
      "$graphic_2d_root/interfaces/inner_api/common",
      "$graphic_2d_root/rosen/modules/render_frame_trace/include",
      "$graphic_2d_root/utils/log",      
      "$graphic_2d_root/utils/sandbox",
    ]
  
  if (defined(graphic_2d_hgm_configs.vendor_root)) {
    include_dirs += graphic_2d_hgm_configs.libhyper_graphic_manager_ext_includes
  }

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Dprivate=public",
    "-Dprotected=public",
  ]
}

ohos_static_library("hgm_test") {
  visibility = [ "$graphic_2d_root/rosen/test/*" ]
  testonly = true
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    cfi_vcall_icall_only = true
    debug = false
  }

  public_configs = [ ":hgm_test_public_config" ]

  sources = [
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/config/hgm_config_callback_manager.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/config/hgm_user_define.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/config/xml_parser.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_app_page_url_strategy.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_energy_consumption_policy.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_frame_rate_manager.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_hfbc_config.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_idle_detector.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_multi_app_strategy.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_pointer_manager.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_task_handle_thread.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_touch_manager.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/frame_rate_manager/hgm_vsync_generator_controller.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/hgm_screen_manager/hgm_core.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/hgm_screen_manager/hgm_screen.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/hgm_screen_manager/hgm_screen_info.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/soft_vsync_manager/hgm_soft_vsync_manager.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/utils/hgm_command.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/utils/hgm_frame_voter.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/utils/hgm_one_shot_timer.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/core/utils/hgm_voter.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/frame_rate_vote/rs_frame_rate_vote.cpp",
    "$graphic_2d_root/rosen/modules/hyper_graphic_manager/frame_rate_vote/rs_video_frame_rate_vote.cpp",
  ]

  if (defined(graphic_2d_hgm_configs.vendor_root)) {
    sources += graphic_2d_hgm_configs.libhyper_graphic_manager_ext_sources
    sources -= graphic_2d_hgm_configs.libhyper_graphic_manager_ext_sources_del
  }

  deps = hgm_test_deps
  external_deps = hgm_test_external_deps

  subsystem_name = "graphic"
  part_name = "graphic_2d"
}
