# Copyright (c) 2022-2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic_2d/rosen/modules/2d_graphics/ndk/"

ohos_unittest("2d_graphics_ndk_test") {
  module_out_path = module_output_path

  defines = []
  sources = [
    "drawing_bitmap_test.cpp",
    "drawing_brush_test.cpp",
    "drawing_canvas_test.cpp",
    "drawing_color_space_test.cpp",
    "drawing_color_test.cpp",
    "drawing_error_code_test.cpp",
    "drawing_font_collection_test.cpp",
    "drawing_font_mgr_test.cpp",
    "drawing_font_test.cpp",
    "drawing_gpu_context_test.cpp",
    "drawing_image_test.cpp",
    "drawing_matrix_test.cpp",
    "drawing_memory_stream_test.cpp",
    "drawing_path_effect_test.cpp",
    "drawing_path_test.cpp",
    "drawing_pen_test.cpp",
    "drawing_pixel_map_test.cpp",
    "drawing_point_test.cpp",
    "drawing_record_cmd_test.cpp",
    "drawing_rect_test.cpp",
    "drawing_region_test.cpp",
    "drawing_register_font_test.cpp",
    "drawing_round_rect_test.cpp",
    "drawing_sampling_options_test.cpp",
    "drawing_shader_effect_test.cpp",
    "drawing_surface_test.cpp",
    "drawing_text_font_descriptor_test.cpp",
    "drawing_text_lineTypography_test.cpp",
    "drawing_text_line_test.cpp",
    "drawing_text_run_test.cpp",
    "drawing_text_typography_test.cpp",
    "drawing_typeface_test.cpp",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/2d_graphics/drawing_ndk/drawing_utils",
    "$graphic_2d_root/rosen/modules/2d_graphics/drawing_ndk/include",
    "$graphic_2d_root/rosen/modules/2d_graphics/drawing_ndk/src",
    "$graphic_2d_root/rosen/modules/2d_graphics/src",
    "$graphic_2d_root/rosen/modules/2d_graphics/src/drawing/engine_adapter",
    "$graphic_2d_root/rosen/modules/render_service_client",
    "$graphic_2d_root/rosen/modules/texgine/src",
    "//third_party/googletest/googletest/include",
  ]

  cflags_cc = [
    "-std=c++17",
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  if (enable_text_gine) {
    include_dirs += [
      "$graphic_2d_root/rosen/modules/2d_engine/rosen_text/export",
      "$graphic_2d_root/rosen/modules/2d_engine/rosen_text/skia_txt",
      "$graphic_2d_root/rosen/modules/render_service_base/include",
      "//third_party/skia",
    ]
    defines += [ "USE_GRAPHIC_TEXT_GINE" ]
  } else {
    include_dirs += [ "$graphic_2d_root/rosen/modules/2d_engine" ]
  }

  defines += gpu_defines

  deps = [
    "$graphic_2d_root/frameworks/opengl_wrapper:EGL",
    "$graphic_2d_root/frameworks/opengl_wrapper:GLESv3",
    "$graphic_2d_root/rosen/modules/2d_graphics:2d_graphics",
    "$graphic_2d_root/rosen/modules/2d_graphics/drawing_ndk:native_drawing_ndk",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "//third_party/googletest:gtest_main",
  ]

  subsystem_name = "graphic"
  external_deps = [
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "c_utils:utils",
    "graphic_surface:surface_headers",
    "hilog:libhilog",
    "image_framework:pixelmap",
    "openssl:libcrypto_shared",
  ]

  platform = current_os
  if (platform == "ohos" || platform == "ohos_ng") {
    defines += [ "OHOS_TEXT_ENABLE" ]
  }
}

group("unittest") {
  testonly = true

  deps = [ ":2d_graphics_ndk_test" ]
}
