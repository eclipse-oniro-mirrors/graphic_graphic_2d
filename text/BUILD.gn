# Copyright (c) 2022 Huawei Device Co., Ltd.. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")
import("//foundation/graphic/graphic_2d/text/config.gni")

config("rosen_text_public_config") {
  include_dirs = [
    "interface/export",
    "$graphic_2d_root/rosen/modules/2d_graphics/include",
    "$graphic_2d_root/rosen/modules/2d_graphics/src",
    "$graphic_2d_root/rosen/modules/2d_graphics/src/drawing",
    "$graphic_2d_root/rosen/modules/2d_graphics/src/drawing/engine_adapter",
    "$graphic_2d_root/rosen/modules",
    "$graphic_2d_root/rosen/modules/render_service_client",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/modules/render_service_base",
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/platform/image_native",
  ]
}

defines = [ "USE_GRAPHIC_TEXT_GINE" ]

ohos_source_set("rosen_text_inner") {
  public_deps = [ ":rosen_text_skia" ]

  part_name = "graphic_2d"
  subsystem_name = "graphic"
}

ohos_source_set("rosen_text_skia") {
  public_configs = [ ":rosen_text_public_config" ]
  include_dirs = [
    "adapter/skia",
    "adapter/skia/txt/src",
  ]

  if (is_arkui_x) {
    include_dirs += [ "//third_party/bounds_checking_function/include" ]
  } else {
    public_external_deps = [ "bounds_checking_function:libsec_shared" ]
  }

  defines += [
    "USE_GRAPHIC_TEXT_GINE",
    "WINDOWS_PLATFORM",
  ]
  cflags_cc = [ "-std=c++17" ]

  sources = [
    "service/common/hm_symbol_txt.cpp",
    "service/common/text_style.cpp",
    "service/common/typography_style.cpp",
    "service/skia_txt/convert.cpp",
    "service/skia_txt/custom_symbol_config.cpp",
    "service/skia_txt/font_collection.cpp",
    "service/skia_txt/line_typography.cpp",
    "service/skia_txt/run_impl.cpp",
    "service/skia_txt/text_line_base.cpp",
    "service/skia_txt/typography.cpp",
    "service/skia_txt/typography_create.cpp",
  ]

  platform = current_os
  if (platform == "mingw") {
    platform = "windows"
  }

  if (defined(use_rosen_drawing) && use_rosen_drawing) {
    defines += [
      "USE_ROSEN_DRAWING",
      "USE_SKIA_TXT",
    ]
    if (rs_enable_gpu) {
      defines += [ "RS_ENABLE_GPU" ]
    }
  }

  external_deps = [
    "hilog:libhilog",
    "jsoncpp:jsoncpp",
    "skia:skia_canvaskit",
  ]

  deps = [
    "service/texgine:libtexgine_source",
    "adapter/skia:skia_libtxt_$platform",
  ]

  is_cross_platform =
      current_os == "mac" || current_os == "mingw" || current_os == "linux" ||
      current_os == "android" || current_os == "ios"

  if (!is_cross_platform) {
    external_deps += [
      "hitrace:hitrace_meter",
      "init:libbegetutil",
    ]
    defines += [ "OHOS_TEXT_ENABLE" ]
  }

  part_name = "graphic_2d"
  subsystem_name = "graphic"
}
